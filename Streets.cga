/**
 * File:    Streets.cga
 * Created: 11 Dec 2020 16:38:35 GMT
 * Author:  Brian Froeb
 */

version "2019.1"

@Group("Visualization Mode", 1)
@Order(1)
@Enum("White", "Colors")
attr visualMode = "White"

@Group("Road Type", 2)
@Order(1)
@Enum("BRT Center Lane", "Primary Access", "Secondary Access", "Main/Walk Street",
      "Alley Two-Way", "Alley One-Way", "Generic")
attr streetType = "Primary Access"
@Order(2)
@Enum("Planter", "Divider", "Turn Lane")
attr medianType = "Planter"

@Group("Street Settings", 3)
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr carLaneWidth = 3.6576
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr brtLaneWidth = 4.2672
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr bikeLaneWidth = 1.524
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr parkingLaneWidth = 2.4384
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr curbWidth = 0.6096
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr shieldWidth = 0.6096
@Order()
@Distance
@Range(min = 0, max = 15, stepsize=0.3048)
attr medianWidth = 2.4384
@Order()
@Distance
@Range(min = 0, max = 200, stepsize=0.3048)
attr crosswalkBufferLength = 2.4384

@Group("Sidewalk Type", 4)
@Order(1)
@Enum("BRT Left", "BRT Right", "Planter and Walk", "Sidewalk Only")
attr sidewalkType = "Primary"

@Group("Sidewalk Settings", 3)
@Order(1)
@Distance
@Range(min = 0, max = 10, stepsize=0.3048)
attr sidewalkWidth =  2.4384
@Order(2)
@Distance
@Range(min = 0, max = 10, stepsize=0.3048)
attr planterWidth = 1.524


###########################
### Constants and Hidden###
###########################

@Hidden
attr streetLength = 0
const sqfeet = 10.764

########################
### Road Start Rules ###
########################

### Sample Flow, make real after call

@StartRule
Street --> 
	set(streetLength, geometry.du(0,unitSpace))
	report("Street Length", streetLength)
	report("Total Road Area", geometry.area * sqfeet)	
	split(u, unitSpace, 0){ crosswalkBufferLength : Crossing
							| {streetLength -(2*crosswalkBufferLength) : CrossSection }
							| crosswalkBufferLength : Crossing
							}

CrossSection --> 
	case streetType == "BRT Center Lane":
		report("Total Road Area", geometry.area * sqfeet)
		split(v, unitSpace, 0){  curbWidth	   : Curb
							   | carLaneWidth: CarLane
							   | carLaneWidth: CarLane
							   | carLaneWidth: CarLane
							   | shieldWidth  : Sheild
							   | brtLaneWidth: BRTLane
							   | brtLaneWidth: BRTLane
							   | shieldWidth  : Sheild	
							   | carLaneWidth: CarLane
							   | carLaneWidth: CarLane
							   | carLaneWidth: CarLane
							   | carLaneWidth: CarLane
							   | curbWidth    : Curb
							   }	
	case streetType == "Generic":
		report("Total Road Area", geometry.area * sqfeet)
		split(v, unitSpace, 0){ curbWidth	   : Curb
        	                  | {carLaneWidth : CarLane }*
						      | curbWidth    : Curb
						      }
	case streetType == "Primary Access":
        report("Total Road Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ curbWidth	   : Curb
                            | carLaneWidth: CarLane
                            | carLaneWidth: CarLane
                            | curbWidth	   : Curb
                            | medianWidth  : Median
                            | curbWidth	   : Curb
                            | carLaneWidth: CarLane
                            | carLaneWidth: CarLane
                            | curbWidth    : Curb
                            }						      		
	case streetType == "Secondary Access":
        report("Total Road Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ curbWidth	   : Curb
                            | bikeLaneWidth: BikeLane
                            | carLaneWidth: CarLane
                            | carLaneWidth: CarLane
                            | bikeLaneWidth: BikeLane
                            | curbWidth    : Curb
                            }
	case streetType == "Main/Walk Street":	
    	report("Total Road Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ curbWidth	   : Curb
                            | parkingLaneWidth: OnStreetParking
                            | carLaneWidth: CarLane
                            | carLaneWidth: CarLane
                            | parkingLaneWidth: OnStreetParking
                            | curbWidth    : Curb
                            }
	case streetType == "Alley Two-Way":
        report("Total Road Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ curbWidth	   : Curb
                            | carLaneWidth: CarLane
                            | carLaneWidth: CarLane
                            | curbWidth    : Curb
                            }
	case streetType == "Alley One-Way":	
    	report("Total Road Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ curbWidth	   : Curb
                            | carLaneWidth: CarLane
                            | carLaneWidth: CarLane
                            | curbWidth    : Curb
                            }*
	else: NIL
	
# Component Visulazations remain basically the same		      
@StartRule						  
Rail -->
	color("#2f2f2f")			      
	
@StartRule
Crossing -->
	color("#FFFFFF")

@StartRule
Junction -->
	color("#FFFFFF")
	
@StartRule
Freeway -->
	color("#FFFFFF")
	
@StartRule
Roundabout -->
	color("#FFFFFF")

############################
### Sidewalk Start Rules ###
############################
@StartRule
Sidewalk -->
    case sidewalkType == "Planter and Walk":
        report("Total Sidewalk Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ planterWidth : Planter
                              | sidewalkWidth : SidewalkSurface }	

    case sidewalkType == "Sidewalk Only":
        report("Total Sidewalk Area", geometry.area * sqfeet)
	    SidewalkSurface
	
    case sidewalkType == "BRT Left":
    	report("Total Sidewalk Area", geometry.area * sqfeet)
	    SidewalkSurface

    case sidewalkType == "BRT Right":
    	report("Total Sidewalk Area", geometry.area * sqfeet)
        split(v, unitSpace, 0){ planterWidth : Planter
                              | sidewalkWidth : SidewalkSurface }	
    else: NIL
    	
    
	
#######################
### Component Rules ###
#######################
BRTLane -->
	comp(f){all : color("#B36A6D")Face.}
	
CarLane -->
	case visualMode == "White":
		report("Road Area, No Parking", geometry.area * sqfeet)
		comp(f){all : color("#FFFFFF")Face. }
	else:
		case streetType == "BRT":
			report("Road Area, No Parking", geometry.area * sqfeet)
			comp(f){all : color("#FFFFFF")Face. }
		case streetType == "Primary":
			report("Road Area, No Parking", geometry.area * sqfeet)
			comp(f){all : color("#F26419")Face. }
		case streetType == "Secondary":
			report("Road Area, No Parking", geometry.area * sqfeet)
			comp(f){all : color("#2F4858")Face. }
		case streetType == "Main": 
			report("Road Area, No Parking", geometry.area * sqfeet)
			comp(f){all : color("#D295BF")Face. }
		case streetType == "Alley": 
			report("Road Area, No Parking", geometry.area * sqfeet)
			comp(f){all : color("#BDD0DB")Face. }
		else: NIL	
		
		
Curb -->
	color("#FFFFFF")

Sheild -->
	color("#FFFFFF")
	
SidewalkSurface -->
	color("#A9A9A9")
	
Planter -->
	color("#8CBA8C")
	
Median -->
	case medianType == "Planter":
		color("#8CBA8C")
	case medianType == "Divider":
		color("#3e4d54")
	case medianType == "Turn Lane":
		color("#FFFFFF")
	else: NIL
	
BikeLane -->
	report("Bike Lane Area", geometry.area * sqfeet)
	color("#6DC46B")
	
OnStreetParking -->
	report("On street Parking Area", geometry.area * sqfeet)
	report("Total Parking Area", geometry.area * sqfeet)
	color("#878787")
	
##############	
### Styles ###
##############	

### Streets

style BRT_Center_Lane
attr streetType = "BRT Center Lane"
attr carLaneWidth = 3.3538
attr brtLaneWidth = 4.2672
attr shieldWidth  = 0.6096
attr curbWidth = 0.6096
attr crosswalkBufferLength = 6.096

style Primary_Access
attr streetType = "Primary Access"
attr carLaneWidth = 3.3528
attr medianWidth = 2.4384
attr curbWidth = 0.6096
attr crosswalkBufferLength = 6.096

style Secondary_Access
attr streetType = "Secondary Access"
attr carLaneWidth = 3.3528
attr bikeLaneWidth = 1.524
attr curbWidth = 0.6096
attr crosswalkBufferLength = 6.096

style Main_Walk_Street
attr streetType = "Main/Walk Street"
attr carLaneWidth = 3.3528
attr parkingLaneWidth = 2.4384
attr curbWidth = 0.6096
attr crosswalkBufferLength = 6.096

style Two_Way_Alley
attr streetType = "Alley Two-Way"
attr carLaneWidth = 3.048
attr curbWidth = 0.6096
attr crosswalkBufferLength = 6.096

style One_Way_Alley
attr streetType = "Alley One-Way"
attr carLaneWidth = 3.048
attr curbWidth = 0.6096
attr crosswalkBufferLength = 6.096

### Sidewalks
style Planter_and_Walk
attr sidewalkType = "Planter and Walk"
attr sidewalkWidth = 3.048
attr planterWidth = 0.6096	

style Sidewalk_Only
attr sidewalkType = "Sidewalk Only"
attr sidewalkWidth = 3.048
attr planterWidth = 0.6096	

style BRT_Right
attr sidewalkType = "BRT Right"
attr sidewalkWidth = 3.048
attr planterWidth = 1.8288	

style BRT_Left
attr sidewalkType = "BRT Left"
attr planterWidth = 1.8288
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	